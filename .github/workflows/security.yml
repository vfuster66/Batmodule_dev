name: Security & Dependencies

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 2 * * 1' # Chaque lundi à 2h du matin

jobs:
  # Audit des dépendances
  dependency-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install all dependencies
        run: npm run install:all

      - name: Audit backend dependencies
        run: |
          cd backend
          npm audit --audit-level moderate

      - name: Audit frontend dependencies
        run: |
          cd frontend
          npm audit --audit-level moderate

  # Scan de sécurité avec CodeQL
  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm run install:all

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # Scan avec Trivy
  trivy-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -f Dockerfile.prod -t batmodule:scan .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'batmodule:scan'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # Vérification des secrets
  secret-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  # Notification des résultats de sécurité
  security-summary:
    runs-on: ubuntu-latest
    needs: [dependency-audit, codeql-analysis, trivy-scan, secret-scan]
    if: always()
    steps:
      - name: Security Results Summary
        run: |
          echo "## 🔒 Rapport de Sécurité" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Scan | Statut |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Audit Dépendances | ${{ needs.dependency-audit.result == 'success' && '✅ Succès' || '⚠️ Échec' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| CodeQL Analysis | ${{ needs.codeql-analysis.result == 'success' && '✅ Succès' || '❌ Échec' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Trivy Scan | ${{ needs.trivy-scan.result == 'success' && '✅ Succès' || '❌ Échec' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Secret Scan | ${{ needs.secret-scan.result == 'success' && '✅ Succès' || '❌ Échec' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Actions Recommandées" >> $GITHUB_STEP_SUMMARY
          echo "- Vérifiez les vulnérabilités détectées" >> $GITHUB_STEP_SUMMARY
          echo "- Mettez à jour les dépendances vulnérables" >> $GITHUB_STEP_SUMMARY
          echo "- Examinez les alertes de sécurité dans l'onglet Security" >> $GITHUB_STEP_SUMMARY
